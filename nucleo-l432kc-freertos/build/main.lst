ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB140:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** typedef enum {
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 2


  32:Core/Src/main.c ****     COM_STATUS_ERROR = 0x00,
  33:Core/Src/main.c ****     COM_STATUS_OK = 0x01,
  34:Core/Src/main.c **** } ComStatus_t;
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** UART_HandleTypeDef huart2;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Definitions for blinkTask01 */
  53:Core/Src/main.c **** osThreadId_t blinkTask01Handle;
  54:Core/Src/main.c **** const osThreadAttr_t blinkTask01_attributes = {
  55:Core/Src/main.c ****     .name = "blinkTask01",
  56:Core/Src/main.c ****     .stack_size = 128 * 4,
  57:Core/Src/main.c ****     .priority = (osPriority_t)osPriorityNormal,
  58:Core/Src/main.c **** };
  59:Core/Src/main.c **** /* Definitions for spiComTask */
  60:Core/Src/main.c **** osThreadId_t spiComTaskHandle;
  61:Core/Src/main.c **** const osThreadAttr_t spiComTask_attributes = {
  62:Core/Src/main.c ****     .name = "spiComTask",
  63:Core/Src/main.c ****     .stack_size = 128 * 4,
  64:Core/Src/main.c ****     .priority = (osPriority_t)osPriorityNormal1,
  65:Core/Src/main.c **** };
  66:Core/Src/main.c **** /* USER CODE BEGIN PV */
  67:Core/Src/main.c **** TaskHandle_t spi_com_task_handle;
  68:Core/Src/main.c **** ComStatus_t spi_com_status;
  69:Core/Src/main.c **** uint8_t message[] = "Hallo";
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE END PV */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  74:Core/Src/main.c **** void SystemClock_Config(void);
  75:Core/Src/main.c **** static void MX_GPIO_Init(void);
  76:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  77:Core/Src/main.c **** static void MX_SPI1_Init(void);
  78:Core/Src/main.c **** void Task_Blink_01(void *argument);
  79:Core/Src/main.c **** void SpiComTask(void *argument);
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* USER CODE END PFP */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  86:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /* USER CODE END 0 */
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /**
  91:Core/Src/main.c ****  * @brief  The application entry point.
  92:Core/Src/main.c ****  * @retval int
  93:Core/Src/main.c ****  */
  94:Core/Src/main.c **** int main(void) {
  95:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****     /* USER CODE END 1 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 102:Core/Src/main.c ****     HAL_Init();
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****     /* USER CODE BEGIN Init */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****     /* USER CODE END Init */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****     /* Configure the system clock */
 109:Core/Src/main.c ****     SystemClock_Config();
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****     /* USER CODE END SysInit */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****     /* Initialize all configured peripherals */
 116:Core/Src/main.c ****     MX_GPIO_Init();
 117:Core/Src/main.c ****     MX_USART2_UART_Init();
 118:Core/Src/main.c ****     MX_SPI1_Init();
 119:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****     /* USER CODE END 2 */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****     /* Init scheduler */
 124:Core/Src/main.c ****     osKernelInitialize();
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****     /* USER CODE BEGIN RTOS_MUTEX */
 127:Core/Src/main.c ****     /* add mutexes, ... */
 128:Core/Src/main.c ****     /* USER CODE END RTOS_MUTEX */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****     /* USER CODE BEGIN RTOS_SEMAPHORES */
 131:Core/Src/main.c ****     /* add semaphores, ... */
 132:Core/Src/main.c ****     /* USER CODE END RTOS_SEMAPHORES */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****     /* USER CODE BEGIN RTOS_TIMERS */
 135:Core/Src/main.c ****     /* start timers, add new ones, ... */
 136:Core/Src/main.c ****     /* USER CODE END RTOS_TIMERS */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****     /* USER CODE BEGIN RTOS_QUEUES */
 139:Core/Src/main.c ****     /* add queues, ... */
 140:Core/Src/main.c ****     /* USER CODE END RTOS_QUEUES */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****     /* Create the thread(s) */
 143:Core/Src/main.c ****     /* creation of blinkTask01 */
 144:Core/Src/main.c ****     blinkTask01Handle = osThreadNew(Task_Blink_01, NULL, &blinkTask01_attributes);
 145:Core/Src/main.c **** 
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 4


 146:Core/Src/main.c ****     /* creation of spiComTask */
 147:Core/Src/main.c ****     spiComTaskHandle = osThreadNew(SpiComTask, NULL, &spiComTask_attributes);
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****     /* USER CODE BEGIN RTOS_THREADS */
 150:Core/Src/main.c ****     /* add threads, ... */
 151:Core/Src/main.c ****     /* USER CODE END RTOS_THREADS */
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****     /* USER CODE BEGIN RTOS_EVENTS */
 154:Core/Src/main.c ****     /* add events, ... */
 155:Core/Src/main.c ****     /* USER CODE END RTOS_EVENTS */
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****     /* Start scheduler */
 158:Core/Src/main.c ****     osKernelStart();
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****     /* We should never get here as control is now taken by the scheduler */
 161:Core/Src/main.c ****     /* Infinite loop */
 162:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 163:Core/Src/main.c ****     while (1) {
 164:Core/Src/main.c ****         /* USER CODE END WHILE */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****         /* USER CODE BEGIN 3 */
 167:Core/Src/main.c ****     }
 168:Core/Src/main.c ****     /* USER CODE END 3 */
 169:Core/Src/main.c **** }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /**
 172:Core/Src/main.c ****  * @brief System Clock Configuration
 173:Core/Src/main.c ****  * @retval None
 174:Core/Src/main.c ****  */
 175:Core/Src/main.c **** void SystemClock_Config(void) {
 176:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 177:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****     /** Configure the main internal regulator output voltage
 180:Core/Src/main.c ****      */
 181:Core/Src/main.c ****     if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK) {
 182:Core/Src/main.c ****         Error_Handler();
 183:Core/Src/main.c ****     }
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****     /** Configure LSE Drive Capability
 186:Core/Src/main.c ****      */
 187:Core/Src/main.c ****     HAL_PWR_EnableBkUpAccess();
 188:Core/Src/main.c ****     __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 191:Core/Src/main.c ****      * in the RCC_OscInitTypeDef structure.
 192:Core/Src/main.c ****      */
 193:Core/Src/main.c ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_MSI;
 194:Core/Src/main.c ****     RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 195:Core/Src/main.c ****     RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 196:Core/Src/main.c ****     RCC_OscInitStruct.MSICalibrationValue = 0;
 197:Core/Src/main.c ****     RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 198:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 199:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 200:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = 1;
 201:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 16;
 202:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 5


 203:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 204:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 205:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 206:Core/Src/main.c ****         Error_Handler();
 207:Core/Src/main.c ****     }
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****     /** Initializes the CPU, AHB and APB buses clocks
 210:Core/Src/main.c ****      */
 211:Core/Src/main.c ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 |
 212:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 213:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 214:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 215:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK) {
 218:Core/Src/main.c ****         Error_Handler();
 219:Core/Src/main.c ****     }
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****     /** Enable MSI Auto calibration
 222:Core/Src/main.c ****      */
 223:Core/Src/main.c ****     HAL_RCCEx_EnableMSIPLLMode();
 224:Core/Src/main.c **** }
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** /**
 227:Core/Src/main.c ****  * @brief SPI1 Initialization Function
 228:Core/Src/main.c ****  * @param None
 229:Core/Src/main.c ****  * @retval None
 230:Core/Src/main.c ****  */
 231:Core/Src/main.c **** static void MX_SPI1_Init(void) {
 232:Core/Src/main.c ****     /* USER CODE BEGIN SPI1_Init 0 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****     /* USER CODE END SPI1_Init 0 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****     /* USER CODE BEGIN SPI1_Init 1 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****     /* USER CODE END SPI1_Init 1 */
 239:Core/Src/main.c ****     /* SPI1 parameter configuration*/
 240:Core/Src/main.c ****     hspi1.Instance = SPI1;
 241:Core/Src/main.c ****     hspi1.Init.Mode = SPI_MODE_MASTER;
 242:Core/Src/main.c ****     hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 243:Core/Src/main.c ****     hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 244:Core/Src/main.c ****     hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 245:Core/Src/main.c ****     hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 246:Core/Src/main.c ****     hspi1.Init.NSS = SPI_NSS_SOFT;
 247:Core/Src/main.c ****     hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 248:Core/Src/main.c ****     hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 249:Core/Src/main.c ****     hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 250:Core/Src/main.c ****     hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 251:Core/Src/main.c ****     hspi1.Init.CRCPolynomial = 7;
 252:Core/Src/main.c ****     hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 253:Core/Src/main.c ****     hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 254:Core/Src/main.c ****     if (HAL_SPI_Init(&hspi1) != HAL_OK) {
 255:Core/Src/main.c ****         Error_Handler();
 256:Core/Src/main.c ****     }
 257:Core/Src/main.c ****     /* USER CODE BEGIN SPI1_Init 2 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****     /* USER CODE END SPI1_Init 2 */
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 6


 260:Core/Src/main.c **** }
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** /**
 263:Core/Src/main.c ****  * @brief USART2 Initialization Function
 264:Core/Src/main.c ****  * @param None
 265:Core/Src/main.c ****  * @retval None
 266:Core/Src/main.c ****  */
 267:Core/Src/main.c **** static void MX_USART2_UART_Init(void) {
 268:Core/Src/main.c ****     /* USER CODE BEGIN USART2_Init 0 */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****     /* USER CODE END USART2_Init 0 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****     /* USER CODE BEGIN USART2_Init 1 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****     /* USER CODE END USART2_Init 1 */
 275:Core/Src/main.c ****     huart2.Instance = USART2;
 276:Core/Src/main.c ****     huart2.Init.BaudRate = 115200;
 277:Core/Src/main.c ****     huart2.Init.WordLength = UART_WORDLENGTH_8B;
 278:Core/Src/main.c ****     huart2.Init.StopBits = UART_STOPBITS_1;
 279:Core/Src/main.c ****     huart2.Init.Parity = UART_PARITY_NONE;
 280:Core/Src/main.c ****     huart2.Init.Mode = UART_MODE_TX_RX;
 281:Core/Src/main.c ****     huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 282:Core/Src/main.c ****     huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 283:Core/Src/main.c ****     huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 284:Core/Src/main.c ****     huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 285:Core/Src/main.c ****     if (HAL_UART_Init(&huart2) != HAL_OK) {
 286:Core/Src/main.c ****         Error_Handler();
 287:Core/Src/main.c ****     }
 288:Core/Src/main.c ****     /* USER CODE BEGIN USART2_Init 2 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****     /* USER CODE END USART2_Init 2 */
 291:Core/Src/main.c **** }
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** /**
 294:Core/Src/main.c ****  * @brief GPIO Initialization Function
 295:Core/Src/main.c ****  * @param None
 296:Core/Src/main.c ****  * @retval None
 297:Core/Src/main.c ****  */
 298:Core/Src/main.c **** static void MX_GPIO_Init(void) {
  28              		.loc 1 298 32 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              		.cfi_def_cfa_offset 48
 299:Core/Src/main.c ****     GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 299 5 view .LVU1
  40              		.loc 1 299 22 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0394     		str	r4, [sp, #12]
  43 0008 0494     		str	r4, [sp, #16]
  44 000a 0594     		str	r4, [sp, #20]
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 7


  45 000c 0694     		str	r4, [sp, #24]
  46 000e 0794     		str	r4, [sp, #28]
 300:Core/Src/main.c ****     /* USER CODE BEGIN MX_GPIO_Init_1 */
 301:Core/Src/main.c ****     /* USER CODE END MX_GPIO_Init_1 */
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****     /* GPIO Ports Clock Enable */
 304:Core/Src/main.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 304 5 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 304 5 view .LVU4
  50              		.loc 1 304 5 view .LVU5
  51 0010 164B     		ldr	r3, .L3
  52 0012 DA6C     		ldr	r2, [r3, #76]
  53 0014 42F00402 		orr	r2, r2, #4
  54 0018 DA64     		str	r2, [r3, #76]
  55              		.loc 1 304 5 view .LVU6
  56 001a DA6C     		ldr	r2, [r3, #76]
  57 001c 02F00402 		and	r2, r2, #4
  58 0020 0092     		str	r2, [sp]
  59              		.loc 1 304 5 view .LVU7
  60 0022 009A     		ldr	r2, [sp]
  61              	.LBE4:
  62              		.loc 1 304 5 view .LVU8
 305:Core/Src/main.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 305 5 view .LVU9
  64              	.LBB5:
  65              		.loc 1 305 5 view .LVU10
  66              		.loc 1 305 5 view .LVU11
  67 0024 DA6C     		ldr	r2, [r3, #76]
  68 0026 42F00102 		orr	r2, r2, #1
  69 002a DA64     		str	r2, [r3, #76]
  70              		.loc 1 305 5 view .LVU12
  71 002c DA6C     		ldr	r2, [r3, #76]
  72 002e 02F00102 		and	r2, r2, #1
  73 0032 0192     		str	r2, [sp, #4]
  74              		.loc 1 305 5 view .LVU13
  75 0034 019A     		ldr	r2, [sp, #4]
  76              	.LBE5:
  77              		.loc 1 305 5 view .LVU14
 306:Core/Src/main.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  78              		.loc 1 306 5 view .LVU15
  79              	.LBB6:
  80              		.loc 1 306 5 view .LVU16
  81              		.loc 1 306 5 view .LVU17
  82 0036 DA6C     		ldr	r2, [r3, #76]
  83 0038 42F00202 		orr	r2, r2, #2
  84 003c DA64     		str	r2, [r3, #76]
  85              		.loc 1 306 5 view .LVU18
  86 003e DB6C     		ldr	r3, [r3, #76]
  87 0040 03F00203 		and	r3, r3, #2
  88 0044 0293     		str	r3, [sp, #8]
  89              		.loc 1 306 5 view .LVU19
  90 0046 029B     		ldr	r3, [sp, #8]
  91              	.LBE6:
  92              		.loc 1 306 5 view .LVU20
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****     /*Configure GPIO pin Output Level */
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 8


 309:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7, GPIO_PIN_RESET);
  93              		.loc 1 309 5 view .LVU21
  94 0048 094D     		ldr	r5, .L3+4
  95 004a 2246     		mov	r2, r4
  96 004c 8321     		movs	r1, #131
  97 004e 2846     		mov	r0, r5
  98 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL0:
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****     /*Configure GPIO pins : PB0 PB1 PB7 */
 312:Core/Src/main.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7;
 100              		.loc 1 312 5 view .LVU22
 101              		.loc 1 312 25 is_stmt 0 view .LVU23
 102 0054 8323     		movs	r3, #131
 103 0056 0393     		str	r3, [sp, #12]
 313:Core/Src/main.c ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 104              		.loc 1 313 5 is_stmt 1 view .LVU24
 105              		.loc 1 313 26 is_stmt 0 view .LVU25
 106 0058 0123     		movs	r3, #1
 107 005a 0493     		str	r3, [sp, #16]
 314:Core/Src/main.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 108              		.loc 1 314 5 is_stmt 1 view .LVU26
 109              		.loc 1 314 26 is_stmt 0 view .LVU27
 110 005c 0594     		str	r4, [sp, #20]
 315:Core/Src/main.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 111              		.loc 1 315 5 is_stmt 1 view .LVU28
 112              		.loc 1 315 27 is_stmt 0 view .LVU29
 113 005e 0694     		str	r4, [sp, #24]
 316:Core/Src/main.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 114              		.loc 1 316 5 is_stmt 1 view .LVU30
 115 0060 03A9     		add	r1, sp, #12
 116 0062 2846     		mov	r0, r5
 117 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 118              	.LVL1:
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****     /* USER CODE BEGIN MX_GPIO_Init_2 */
 319:Core/Src/main.c ****     /* USER CODE END MX_GPIO_Init_2 */
 320:Core/Src/main.c **** }
 119              		.loc 1 320 1 is_stmt 0 view .LVU31
 120 0068 09B0     		add	sp, sp, #36
 121              		.cfi_def_cfa_offset 12
 122              		@ sp needed
 123 006a 30BD     		pop	{r4, r5, pc}
 124              	.L4:
 125              		.align	2
 126              	.L3:
 127 006c 00100240 		.word	1073876992
 128 0070 00040048 		.word	1207960576
 129              		.cfi_endproc
 130              	.LFE140:
 132              		.section	.text.Task_Blink_01,"ax",%progbits
 133              		.align	1
 134              		.global	Task_Blink_01
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 139              	Task_Blink_01:
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 9


 140              	.LFB141:
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c **** /* USER CODE END 4 */
 325:Core/Src/main.c **** 
 326:Core/Src/main.c **** /* USER CODE BEGIN Header_Task_Blink_01 */
 327:Core/Src/main.c **** /**
 328:Core/Src/main.c ****  * @brief  Function implementing the blinkTask01 thread.
 329:Core/Src/main.c ****  * @param  argument: Not used
 330:Core/Src/main.c ****  * @retval None
 331:Core/Src/main.c ****  */
 332:Core/Src/main.c **** /* USER CODE END Header_Task_Blink_01 */
 333:Core/Src/main.c **** void Task_Blink_01(void *argument) {
 141              		.loc 1 333 36 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ Volatile: function does not return.
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              	.LVL2:
 147              		.loc 1 333 36 is_stmt 0 view .LVU33
 148 0000 08B5     		push	{r3, lr}
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 3, -8
 151              		.cfi_offset 14, -4
 152              	.LVL3:
 153              	.L6:
 334:Core/Src/main.c ****     /* USER CODE BEGIN 5 */
 335:Core/Src/main.c ****     /* Infinite loop */
 336:Core/Src/main.c ****     for (;;) {
 154              		.loc 1 336 5 is_stmt 1 view .LVU34
 337:Core/Src/main.c ****         HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_1);
 155              		.loc 1 337 9 view .LVU35
 156 0002 0221     		movs	r1, #2
 157 0004 0348     		ldr	r0, .L8
 158 0006 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 159              	.LVL4:
 338:Core/Src/main.c ****         osDelay(500);
 160              		.loc 1 338 9 discriminator 1 view .LVU36
 161 000a 4FF4FA70 		mov	r0, #500
 162 000e FFF7FEFF 		bl	osDelay
 163              	.LVL5:
 336:Core/Src/main.c ****         HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_1);
 164              		.loc 1 336 5 view .LVU37
 165 0012 F6E7     		b	.L6
 166              	.L9:
 167              		.align	2
 168              	.L8:
 169 0014 00040048 		.word	1207960576
 170              		.cfi_endproc
 171              	.LFE141:
 173              		.section	.text.SpiComTask,"ax",%progbits
 174              		.align	1
 175              		.global	SpiComTask
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 10


 180              	SpiComTask:
 181              	.LVL6:
 182              	.LFB142:
 339:Core/Src/main.c ****     }
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****     // Clean up if needed
 342:Core/Src/main.c ****     osThreadTerminate(NULL);
 343:Core/Src/main.c ****     /* USER CODE END 5 */
 344:Core/Src/main.c **** }
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** /* USER CODE BEGIN Header_SpiComTask */
 347:Core/Src/main.c **** /**
 348:Core/Src/main.c ****  * @brief Function implementing the spiComTask thread.
 349:Core/Src/main.c ****  * @param argument: Not used
 350:Core/Src/main.c ****  * @retval None
 351:Core/Src/main.c ****  */
 352:Core/Src/main.c **** /* USER CODE END Header_SpiComTask */
 353:Core/Src/main.c **** void SpiComTask(void *argument) {
 183              		.loc 1 353 33 view -0
 184              		.cfi_startproc
 185              		@ Volatile: function does not return.
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		.loc 1 353 33 is_stmt 0 view .LVU39
 189 0000 08B5     		push	{r3, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 3, -8
 192              		.cfi_offset 14, -4
 354:Core/Src/main.c ****     /* USER CODE BEGIN SpiComTask */
 355:Core/Src/main.c ****     /* Infinite loop */
 356:Core/Src/main.c ****     spi_com_task_handle = xTaskGetCurrentTaskHandle();
 193              		.loc 1 356 5 is_stmt 1 view .LVU40
 194              		.loc 1 356 27 is_stmt 0 view .LVU41
 195 0002 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 196              	.LVL7:
 197              		.loc 1 356 25 discriminator 1 view .LVU42
 198 0006 144B     		ldr	r3, .L13
 199 0008 1860     		str	r0, [r3]
 357:Core/Src/main.c ****     spi_com_status = COM_STATUS_OK;
 200              		.loc 1 357 5 is_stmt 1 view .LVU43
 201              		.loc 1 357 20 is_stmt 0 view .LVU44
 202 000a 144B     		ldr	r3, .L13+4
 203 000c 0122     		movs	r2, #1
 204 000e 1A70     		strb	r2, [r3]
 205              	.L11:
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****     for (;;) {
 206              		.loc 1 359 5 is_stmt 1 view .LVU45
 360:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);  // LED
 207              		.loc 1 360 9 view .LVU46
 208 0010 134C     		ldr	r4, .L13+8
 209 0012 0022     		movs	r2, #0
 210 0014 0121     		movs	r1, #1
 211 0016 2046     		mov	r0, r4
 212 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 213              	.LVL8:
 361:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);  // CS
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 11


 214              		.loc 1 361 9 view .LVU47
 215 001c 0022     		movs	r2, #0
 216 001e 8021     		movs	r1, #128
 217 0020 4FF09040 		mov	r0, #1207959552
 218 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 219              	.LVL9:
 362:Core/Src/main.c ****         HAL_SPI_Transmit(&hspi1, message, 6, 1000);
 220              		.loc 1 362 9 view .LVU48
 221 0028 4FF47A73 		mov	r3, #1000
 222 002c 0622     		movs	r2, #6
 223 002e 0D49     		ldr	r1, .L13+12
 224 0030 0D48     		ldr	r0, .L13+16
 225 0032 FFF7FEFF 		bl	HAL_SPI_Transmit
 226              	.LVL10:
 363:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);  // CS
 227              		.loc 1 363 9 view .LVU49
 228 0036 0122     		movs	r2, #1
 229 0038 8021     		movs	r1, #128
 230 003a 4FF09040 		mov	r0, #1207959552
 231 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 232              	.LVL11:
 364:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);  // LED
 233              		.loc 1 364 9 view .LVU50
 234 0042 0122     		movs	r2, #1
 235 0044 1146     		mov	r1, r2
 236 0046 2046     		mov	r0, r4
 237 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 238              	.LVL12:
 365:Core/Src/main.c ****         osDelay(1000);
 239              		.loc 1 365 9 discriminator 1 view .LVU51
 240 004c 4FF47A70 		mov	r0, #1000
 241 0050 FFF7FEFF 		bl	osDelay
 242              	.LVL13:
 359:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);  // LED
 243              		.loc 1 359 5 view .LVU52
 244 0054 DCE7     		b	.L11
 245              	.L14:
 246 0056 00BF     		.align	2
 247              	.L13:
 248 0058 00000000 		.word	spi_com_task_handle
 249 005c 00000000 		.word	spi_com_status
 250 0060 00040048 		.word	1207960576
 251 0064 00000000 		.word	message
 252 0068 00000000 		.word	hspi1
 253              		.cfi_endproc
 254              	.LFE142:
 256              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 257              		.align	1
 258              		.global	HAL_TIM_PeriodElapsedCallback
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 263              	HAL_TIM_PeriodElapsedCallback:
 264              	.LVL14:
 265              	.LFB143:
 366:Core/Src/main.c ****     }
 367:Core/Src/main.c ****     /* USER CODE END SpiComTask */
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 12


 368:Core/Src/main.c **** }
 369:Core/Src/main.c **** 
 370:Core/Src/main.c **** /**
 371:Core/Src/main.c ****  * @brief  Period elapsed callback in non blocking mode
 372:Core/Src/main.c ****  * @note   This function is called  when TIM6 interrupt took place, inside
 373:Core/Src/main.c ****  * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 374:Core/Src/main.c ****  * a global variable "uwTick" used as application time base.
 375:Core/Src/main.c ****  * @param  htim : TIM handle
 376:Core/Src/main.c ****  * @retval None
 377:Core/Src/main.c ****  */
 378:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 266              		.loc 1 378 61 view -0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              		.loc 1 378 61 is_stmt 0 view .LVU54
 271 0000 08B5     		push	{r3, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 3, -8
 274              		.cfi_offset 14, -4
 379:Core/Src/main.c ****     /* USER CODE BEGIN Callback 0 */
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****     /* USER CODE END Callback 0 */
 382:Core/Src/main.c ****     if (htim->Instance == TIM6) {
 275              		.loc 1 382 5 is_stmt 1 view .LVU55
 276              		.loc 1 382 13 is_stmt 0 view .LVU56
 277 0002 0268     		ldr	r2, [r0]
 278              		.loc 1 382 8 view .LVU57
 279 0004 034B     		ldr	r3, .L19
 280 0006 9A42     		cmp	r2, r3
 281 0008 00D0     		beq	.L18
 282              	.LVL15:
 283              	.L15:
 383:Core/Src/main.c ****         HAL_IncTick();
 384:Core/Src/main.c ****     }
 385:Core/Src/main.c ****     /* USER CODE BEGIN Callback 1 */
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****     /* USER CODE END Callback 1 */
 388:Core/Src/main.c **** }
 284              		.loc 1 388 1 view .LVU58
 285 000a 08BD     		pop	{r3, pc}
 286              	.LVL16:
 287              	.L18:
 383:Core/Src/main.c ****         HAL_IncTick();
 288              		.loc 1 383 9 is_stmt 1 view .LVU59
 289 000c FFF7FEFF 		bl	HAL_IncTick
 290              	.LVL17:
 291              		.loc 1 388 1 is_stmt 0 view .LVU60
 292 0010 FBE7     		b	.L15
 293              	.L20:
 294 0012 00BF     		.align	2
 295              	.L19:
 296 0014 00100040 		.word	1073745920
 297              		.cfi_endproc
 298              	.LFE143:
 300              		.section	.text.Error_Handler,"ax",%progbits
 301              		.align	1
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 13


 302              		.global	Error_Handler
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 307              	Error_Handler:
 308              	.LFB144:
 389:Core/Src/main.c **** 
 390:Core/Src/main.c **** /**
 391:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 392:Core/Src/main.c ****  * @retval None
 393:Core/Src/main.c ****  */
 394:Core/Src/main.c **** void Error_Handler(void) {
 309              		.loc 1 394 26 is_stmt 1 view -0
 310              		.cfi_startproc
 311              		@ Volatile: function does not return.
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 395:Core/Src/main.c ****     /* USER CODE BEGIN Error_Handler_Debug */
 396:Core/Src/main.c ****     /* User can add his own implementation to report the HAL error return state */
 397:Core/Src/main.c ****     __disable_irq();
 315              		.loc 1 397 5 view .LVU62
 316              	.LBB7:
 317              	.LBI7:
 318              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 14


  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 15


  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 16


 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 17


 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 319              		.loc 2 207 27 view .LVU63
 320              	.LBB8:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 321              		.loc 2 209 3 view .LVU64
 322              		.syntax unified
 323              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 324 0000 72B6     		cpsid i
 325              	@ 0 "" 2
 326              		.thumb
 327              		.syntax unified
 328              	.L22:
 329              	.LBE8:
 330              	.LBE7:
 398:Core/Src/main.c ****     while (1) {
 331              		.loc 1 398 5 view .LVU65
 399:Core/Src/main.c ****     }
 332              		.loc 1 399 5 view .LVU66
 398:Core/Src/main.c ****     while (1) {
 333              		.loc 1 398 11 view .LVU67
 334 0002 FEE7     		b	.L22
 335              		.cfi_endproc
 336              	.LFE144:
 338              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 339              		.align	1
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 344              	MX_USART2_UART_Init:
 345              	.LFB139:
 267:Core/Src/main.c ****     /* USER CODE BEGIN USART2_Init 0 */
 346              		.loc 1 267 39 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350 0000 08B5     		push	{r3, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 3, -8
 353              		.cfi_offset 14, -4
 275:Core/Src/main.c ****     huart2.Init.BaudRate = 115200;
 354              		.loc 1 275 5 view .LVU69
 275:Core/Src/main.c ****     huart2.Init.BaudRate = 115200;
 355              		.loc 1 275 21 is_stmt 0 view .LVU70
 356 0002 0B48     		ldr	r0, .L27
 357 0004 0B4B     		ldr	r3, .L27+4
 358 0006 0360     		str	r3, [r0]
 276:Core/Src/main.c ****     huart2.Init.WordLength = UART_WORDLENGTH_8B;
 359              		.loc 1 276 5 is_stmt 1 view .LVU71
 276:Core/Src/main.c ****     huart2.Init.WordLength = UART_WORDLENGTH_8B;
 360              		.loc 1 276 26 is_stmt 0 view .LVU72
 361 0008 4FF4E133 		mov	r3, #115200
 362 000c 4360     		str	r3, [r0, #4]
 277:Core/Src/main.c ****     huart2.Init.StopBits = UART_STOPBITS_1;
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 18


 363              		.loc 1 277 5 is_stmt 1 view .LVU73
 277:Core/Src/main.c ****     huart2.Init.StopBits = UART_STOPBITS_1;
 364              		.loc 1 277 28 is_stmt 0 view .LVU74
 365 000e 0023     		movs	r3, #0
 366 0010 8360     		str	r3, [r0, #8]
 278:Core/Src/main.c ****     huart2.Init.Parity = UART_PARITY_NONE;
 367              		.loc 1 278 5 is_stmt 1 view .LVU75
 278:Core/Src/main.c ****     huart2.Init.Parity = UART_PARITY_NONE;
 368              		.loc 1 278 26 is_stmt 0 view .LVU76
 369 0012 C360     		str	r3, [r0, #12]
 279:Core/Src/main.c ****     huart2.Init.Mode = UART_MODE_TX_RX;
 370              		.loc 1 279 5 is_stmt 1 view .LVU77
 279:Core/Src/main.c ****     huart2.Init.Mode = UART_MODE_TX_RX;
 371              		.loc 1 279 24 is_stmt 0 view .LVU78
 372 0014 0361     		str	r3, [r0, #16]
 280:Core/Src/main.c ****     huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 373              		.loc 1 280 5 is_stmt 1 view .LVU79
 280:Core/Src/main.c ****     huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 374              		.loc 1 280 22 is_stmt 0 view .LVU80
 375 0016 0C22     		movs	r2, #12
 376 0018 4261     		str	r2, [r0, #20]
 281:Core/Src/main.c ****     huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 377              		.loc 1 281 5 is_stmt 1 view .LVU81
 281:Core/Src/main.c ****     huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 378              		.loc 1 281 27 is_stmt 0 view .LVU82
 379 001a 8361     		str	r3, [r0, #24]
 282:Core/Src/main.c ****     huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 380              		.loc 1 282 5 is_stmt 1 view .LVU83
 282:Core/Src/main.c ****     huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 381              		.loc 1 282 30 is_stmt 0 view .LVU84
 382 001c C361     		str	r3, [r0, #28]
 283:Core/Src/main.c ****     huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 383              		.loc 1 283 5 is_stmt 1 view .LVU85
 283:Core/Src/main.c ****     huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 384              		.loc 1 283 32 is_stmt 0 view .LVU86
 385 001e 0362     		str	r3, [r0, #32]
 284:Core/Src/main.c ****     if (HAL_UART_Init(&huart2) != HAL_OK) {
 386              		.loc 1 284 5 is_stmt 1 view .LVU87
 284:Core/Src/main.c ****     if (HAL_UART_Init(&huart2) != HAL_OK) {
 387              		.loc 1 284 40 is_stmt 0 view .LVU88
 388 0020 4362     		str	r3, [r0, #36]
 285:Core/Src/main.c ****         Error_Handler();
 389              		.loc 1 285 5 is_stmt 1 view .LVU89
 285:Core/Src/main.c ****         Error_Handler();
 390              		.loc 1 285 9 is_stmt 0 view .LVU90
 391 0022 FFF7FEFF 		bl	HAL_UART_Init
 392              	.LVL18:
 285:Core/Src/main.c ****         Error_Handler();
 393              		.loc 1 285 8 discriminator 1 view .LVU91
 394 0026 00B9     		cbnz	r0, .L26
 291:Core/Src/main.c **** 
 395              		.loc 1 291 1 view .LVU92
 396 0028 08BD     		pop	{r3, pc}
 397              	.L26:
 286:Core/Src/main.c ****     }
 398              		.loc 1 286 9 is_stmt 1 view .LVU93
 399 002a FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 19


 400              	.LVL19:
 401              	.L28:
 402 002e 00BF     		.align	2
 403              	.L27:
 404 0030 00000000 		.word	huart2
 405 0034 00440040 		.word	1073759232
 406              		.cfi_endproc
 407              	.LFE139:
 409              		.section	.text.MX_SPI1_Init,"ax",%progbits
 410              		.align	1
 411              		.syntax unified
 412              		.thumb
 413              		.thumb_func
 415              	MX_SPI1_Init:
 416              	.LFB138:
 231:Core/Src/main.c ****     /* USER CODE BEGIN SPI1_Init 0 */
 417              		.loc 1 231 32 view -0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421 0000 08B5     		push	{r3, lr}
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 3, -8
 424              		.cfi_offset 14, -4
 240:Core/Src/main.c ****     hspi1.Init.Mode = SPI_MODE_MASTER;
 425              		.loc 1 240 5 view .LVU95
 240:Core/Src/main.c ****     hspi1.Init.Mode = SPI_MODE_MASTER;
 426              		.loc 1 240 20 is_stmt 0 view .LVU96
 427 0002 0F48     		ldr	r0, .L33
 428 0004 0F4B     		ldr	r3, .L33+4
 429 0006 0360     		str	r3, [r0]
 241:Core/Src/main.c ****     hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 430              		.loc 1 241 5 is_stmt 1 view .LVU97
 241:Core/Src/main.c ****     hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 431              		.loc 1 241 21 is_stmt 0 view .LVU98
 432 0008 4FF48273 		mov	r3, #260
 433 000c 4360     		str	r3, [r0, #4]
 242:Core/Src/main.c ****     hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 434              		.loc 1 242 5 is_stmt 1 view .LVU99
 242:Core/Src/main.c ****     hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 435              		.loc 1 242 26 is_stmt 0 view .LVU100
 436 000e 0023     		movs	r3, #0
 437 0010 8360     		str	r3, [r0, #8]
 243:Core/Src/main.c ****     hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 438              		.loc 1 243 5 is_stmt 1 view .LVU101
 243:Core/Src/main.c ****     hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 439              		.loc 1 243 25 is_stmt 0 view .LVU102
 440 0012 4FF4E062 		mov	r2, #1792
 441 0016 C260     		str	r2, [r0, #12]
 244:Core/Src/main.c ****     hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 442              		.loc 1 244 5 is_stmt 1 view .LVU103
 244:Core/Src/main.c ****     hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 443              		.loc 1 244 28 is_stmt 0 view .LVU104
 444 0018 0361     		str	r3, [r0, #16]
 245:Core/Src/main.c ****     hspi1.Init.NSS = SPI_NSS_SOFT;
 445              		.loc 1 245 5 is_stmt 1 view .LVU105
 245:Core/Src/main.c ****     hspi1.Init.NSS = SPI_NSS_SOFT;
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 20


 446              		.loc 1 245 25 is_stmt 0 view .LVU106
 447 001a 4361     		str	r3, [r0, #20]
 246:Core/Src/main.c ****     hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 448              		.loc 1 246 5 is_stmt 1 view .LVU107
 246:Core/Src/main.c ****     hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 449              		.loc 1 246 20 is_stmt 0 view .LVU108
 450 001c 4FF40072 		mov	r2, #512
 451 0020 8261     		str	r2, [r0, #24]
 247:Core/Src/main.c ****     hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 452              		.loc 1 247 5 is_stmt 1 view .LVU109
 247:Core/Src/main.c ****     hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 453              		.loc 1 247 34 is_stmt 0 view .LVU110
 454 0022 2022     		movs	r2, #32
 455 0024 C261     		str	r2, [r0, #28]
 248:Core/Src/main.c ****     hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 456              		.loc 1 248 5 is_stmt 1 view .LVU111
 248:Core/Src/main.c ****     hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 457              		.loc 1 248 25 is_stmt 0 view .LVU112
 458 0026 0362     		str	r3, [r0, #32]
 249:Core/Src/main.c ****     hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 459              		.loc 1 249 5 is_stmt 1 view .LVU113
 249:Core/Src/main.c ****     hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 460              		.loc 1 249 23 is_stmt 0 view .LVU114
 461 0028 4362     		str	r3, [r0, #36]
 250:Core/Src/main.c ****     hspi1.Init.CRCPolynomial = 7;
 462              		.loc 1 250 5 is_stmt 1 view .LVU115
 250:Core/Src/main.c ****     hspi1.Init.CRCPolynomial = 7;
 463              		.loc 1 250 31 is_stmt 0 view .LVU116
 464 002a 8362     		str	r3, [r0, #40]
 251:Core/Src/main.c ****     hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 465              		.loc 1 251 5 is_stmt 1 view .LVU117
 251:Core/Src/main.c ****     hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 466              		.loc 1 251 30 is_stmt 0 view .LVU118
 467 002c 0722     		movs	r2, #7
 468 002e C262     		str	r2, [r0, #44]
 252:Core/Src/main.c ****     hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 469              		.loc 1 252 5 is_stmt 1 view .LVU119
 252:Core/Src/main.c ****     hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 470              		.loc 1 252 26 is_stmt 0 view .LVU120
 471 0030 0363     		str	r3, [r0, #48]
 253:Core/Src/main.c ****     if (HAL_SPI_Init(&hspi1) != HAL_OK) {
 472              		.loc 1 253 5 is_stmt 1 view .LVU121
 253:Core/Src/main.c ****     if (HAL_SPI_Init(&hspi1) != HAL_OK) {
 473              		.loc 1 253 25 is_stmt 0 view .LVU122
 474 0032 4363     		str	r3, [r0, #52]
 254:Core/Src/main.c ****         Error_Handler();
 475              		.loc 1 254 5 is_stmt 1 view .LVU123
 254:Core/Src/main.c ****         Error_Handler();
 476              		.loc 1 254 9 is_stmt 0 view .LVU124
 477 0034 FFF7FEFF 		bl	HAL_SPI_Init
 478              	.LVL20:
 254:Core/Src/main.c ****         Error_Handler();
 479              		.loc 1 254 8 discriminator 1 view .LVU125
 480 0038 00B9     		cbnz	r0, .L32
 260:Core/Src/main.c **** 
 481              		.loc 1 260 1 view .LVU126
 482 003a 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 21


 483              	.L32:
 255:Core/Src/main.c ****     }
 484              		.loc 1 255 9 is_stmt 1 view .LVU127
 485 003c FFF7FEFF 		bl	Error_Handler
 486              	.LVL21:
 487              	.L34:
 488              		.align	2
 489              	.L33:
 490 0040 00000000 		.word	hspi1
 491 0044 00300140 		.word	1073819648
 492              		.cfi_endproc
 493              	.LFE138:
 495              		.section	.text.SystemClock_Config,"ax",%progbits
 496              		.align	1
 497              		.global	SystemClock_Config
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 502              	SystemClock_Config:
 503              	.LFB137:
 175:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 504              		.loc 1 175 31 view -0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 88
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508 0000 00B5     		push	{lr}
 509              		.cfi_def_cfa_offset 4
 510              		.cfi_offset 14, -4
 511 0002 97B0     		sub	sp, sp, #92
 512              		.cfi_def_cfa_offset 96
 176:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 513              		.loc 1 176 5 view .LVU129
 176:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 514              		.loc 1 176 24 is_stmt 0 view .LVU130
 515 0004 4422     		movs	r2, #68
 516 0006 0021     		movs	r1, #0
 517 0008 05A8     		add	r0, sp, #20
 518 000a FFF7FEFF 		bl	memset
 519              	.LVL22:
 177:Core/Src/main.c **** 
 520              		.loc 1 177 5 is_stmt 1 view .LVU131
 177:Core/Src/main.c **** 
 521              		.loc 1 177 24 is_stmt 0 view .LVU132
 522 000e 0023     		movs	r3, #0
 523 0010 0093     		str	r3, [sp]
 524 0012 0193     		str	r3, [sp, #4]
 525 0014 0293     		str	r3, [sp, #8]
 526 0016 0393     		str	r3, [sp, #12]
 527 0018 0493     		str	r3, [sp, #16]
 181:Core/Src/main.c ****         Error_Handler();
 528              		.loc 1 181 5 is_stmt 1 view .LVU133
 181:Core/Src/main.c ****         Error_Handler();
 529              		.loc 1 181 9 is_stmt 0 view .LVU134
 530 001a 4FF40070 		mov	r0, #512
 531 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 532              	.LVL23:
 181:Core/Src/main.c ****         Error_Handler();
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 22


 533              		.loc 1 181 8 discriminator 1 view .LVU135
 534 0022 0028     		cmp	r0, #0
 535 0024 31D1     		bne	.L40
 187:Core/Src/main.c ****     __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 536              		.loc 1 187 5 is_stmt 1 view .LVU136
 537 0026 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 538              	.LVL24:
 188:Core/Src/main.c **** 
 539              		.loc 1 188 5 view .LVU137
 540 002a 1B4A     		ldr	r2, .L43
 541 002c D2F89030 		ldr	r3, [r2, #144]
 542 0030 23F01803 		bic	r3, r3, #24
 543 0034 C2F89030 		str	r3, [r2, #144]
 193:Core/Src/main.c ****     RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 544              		.loc 1 193 5 view .LVU138
 193:Core/Src/main.c ****     RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 545              		.loc 1 193 38 is_stmt 0 view .LVU139
 546 0038 1423     		movs	r3, #20
 547 003a 0593     		str	r3, [sp, #20]
 194:Core/Src/main.c ****     RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 548              		.loc 1 194 5 is_stmt 1 view .LVU140
 194:Core/Src/main.c ****     RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 549              		.loc 1 194 32 is_stmt 0 view .LVU141
 550 003c 0123     		movs	r3, #1
 551 003e 0793     		str	r3, [sp, #28]
 195:Core/Src/main.c ****     RCC_OscInitStruct.MSICalibrationValue = 0;
 552              		.loc 1 195 5 is_stmt 1 view .LVU142
 195:Core/Src/main.c ****     RCC_OscInitStruct.MSICalibrationValue = 0;
 553              		.loc 1 195 32 is_stmt 0 view .LVU143
 554 0040 0B93     		str	r3, [sp, #44]
 196:Core/Src/main.c ****     RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 555              		.loc 1 196 5 is_stmt 1 view .LVU144
 196:Core/Src/main.c ****     RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 556              		.loc 1 196 43 is_stmt 0 view .LVU145
 557 0042 0022     		movs	r2, #0
 558 0044 0C92     		str	r2, [sp, #48]
 197:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 559              		.loc 1 197 5 is_stmt 1 view .LVU146
 197:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 560              		.loc 1 197 37 is_stmt 0 view .LVU147
 561 0046 6022     		movs	r2, #96
 562 0048 0D92     		str	r2, [sp, #52]
 198:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 563              		.loc 1 198 5 is_stmt 1 view .LVU148
 198:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 564              		.loc 1 198 36 is_stmt 0 view .LVU149
 565 004a 0222     		movs	r2, #2
 566 004c 0F92     		str	r2, [sp, #60]
 199:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = 1;
 567              		.loc 1 199 5 is_stmt 1 view .LVU150
 199:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = 1;
 568              		.loc 1 199 37 is_stmt 0 view .LVU151
 569 004e 1093     		str	r3, [sp, #64]
 200:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 16;
 570              		.loc 1 200 5 is_stmt 1 view .LVU152
 200:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 16;
 571              		.loc 1 200 32 is_stmt 0 view .LVU153
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 23


 572 0050 1193     		str	r3, [sp, #68]
 201:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 573              		.loc 1 201 5 is_stmt 1 view .LVU154
 201:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 574              		.loc 1 201 32 is_stmt 0 view .LVU155
 575 0052 1023     		movs	r3, #16
 576 0054 1293     		str	r3, [sp, #72]
 202:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 577              		.loc 1 202 5 is_stmt 1 view .LVU156
 202:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 578              		.loc 1 202 32 is_stmt 0 view .LVU157
 579 0056 0723     		movs	r3, #7
 580 0058 1393     		str	r3, [sp, #76]
 203:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 581              		.loc 1 203 5 is_stmt 1 view .LVU158
 203:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 582              		.loc 1 203 32 is_stmt 0 view .LVU159
 583 005a 1492     		str	r2, [sp, #80]
 204:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 584              		.loc 1 204 5 is_stmt 1 view .LVU160
 204:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 585              		.loc 1 204 32 is_stmt 0 view .LVU161
 586 005c 1592     		str	r2, [sp, #84]
 205:Core/Src/main.c ****         Error_Handler();
 587              		.loc 1 205 5 is_stmt 1 view .LVU162
 205:Core/Src/main.c ****         Error_Handler();
 588              		.loc 1 205 9 is_stmt 0 view .LVU163
 589 005e 05A8     		add	r0, sp, #20
 590 0060 FFF7FEFF 		bl	HAL_RCC_OscConfig
 591              	.LVL25:
 205:Core/Src/main.c ****         Error_Handler();
 592              		.loc 1 205 8 discriminator 1 view .LVU164
 593 0064 98B9     		cbnz	r0, .L41
 211:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 594              		.loc 1 211 5 is_stmt 1 view .LVU165
 211:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 595              		.loc 1 211 33 is_stmt 0 view .LVU166
 596 0066 0F23     		movs	r3, #15
 597 0068 0093     		str	r3, [sp]
 212:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 598              		.loc 1 212 5 is_stmt 1 view .LVU167
 212:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 599              		.loc 1 212 36 is_stmt 0 view .LVU168
 600 006a 0323     		movs	r3, #3
 601 006c 0193     		str	r3, [sp, #4]
 213:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 602              		.loc 1 213 5 is_stmt 1 view .LVU169
 213:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 603              		.loc 1 213 37 is_stmt 0 view .LVU170
 604 006e 0023     		movs	r3, #0
 605 0070 0293     		str	r3, [sp, #8]
 214:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 606              		.loc 1 214 5 is_stmt 1 view .LVU171
 214:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 607              		.loc 1 214 38 is_stmt 0 view .LVU172
 608 0072 0393     		str	r3, [sp, #12]
 215:Core/Src/main.c **** 
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 24


 609              		.loc 1 215 5 is_stmt 1 view .LVU173
 215:Core/Src/main.c **** 
 610              		.loc 1 215 38 is_stmt 0 view .LVU174
 611 0074 0493     		str	r3, [sp, #16]
 217:Core/Src/main.c ****         Error_Handler();
 612              		.loc 1 217 5 is_stmt 1 view .LVU175
 217:Core/Src/main.c ****         Error_Handler();
 613              		.loc 1 217 9 is_stmt 0 view .LVU176
 614 0076 0121     		movs	r1, #1
 615 0078 6846     		mov	r0, sp
 616 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 617              	.LVL26:
 217:Core/Src/main.c ****         Error_Handler();
 618              		.loc 1 217 8 discriminator 1 view .LVU177
 619 007e 40B9     		cbnz	r0, .L42
 223:Core/Src/main.c **** }
 620              		.loc 1 223 5 is_stmt 1 view .LVU178
 621 0080 FFF7FEFF 		bl	HAL_RCCEx_EnableMSIPLLMode
 622              	.LVL27:
 224:Core/Src/main.c **** 
 623              		.loc 1 224 1 is_stmt 0 view .LVU179
 624 0084 17B0     		add	sp, sp, #92
 625              		.cfi_remember_state
 626              		.cfi_def_cfa_offset 4
 627              		@ sp needed
 628 0086 5DF804FB 		ldr	pc, [sp], #4
 629              	.L40:
 630              		.cfi_restore_state
 182:Core/Src/main.c ****     }
 631              		.loc 1 182 9 is_stmt 1 view .LVU180
 632 008a FFF7FEFF 		bl	Error_Handler
 633              	.LVL28:
 634              	.L41:
 206:Core/Src/main.c ****     }
 635              		.loc 1 206 9 view .LVU181
 636 008e FFF7FEFF 		bl	Error_Handler
 637              	.LVL29:
 638              	.L42:
 218:Core/Src/main.c ****     }
 639              		.loc 1 218 9 view .LVU182
 640 0092 FFF7FEFF 		bl	Error_Handler
 641              	.LVL30:
 642              	.L44:
 643 0096 00BF     		.align	2
 644              	.L43:
 645 0098 00100240 		.word	1073876992
 646              		.cfi_endproc
 647              	.LFE137:
 649              		.section	.text.main,"ax",%progbits
 650              		.align	1
 651              		.global	main
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 656              	main:
 657              	.LFB136:
  94:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 25


 658              		.loc 1 94 16 view -0
 659              		.cfi_startproc
 660              		@ Volatile: function does not return.
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663 0000 08B5     		push	{r3, lr}
 664              		.cfi_def_cfa_offset 8
 665              		.cfi_offset 3, -8
 666              		.cfi_offset 14, -4
 102:Core/Src/main.c **** 
 667              		.loc 1 102 5 view .LVU184
 668 0002 FFF7FEFF 		bl	HAL_Init
 669              	.LVL31:
 109:Core/Src/main.c **** 
 670              		.loc 1 109 5 view .LVU185
 671 0006 FFF7FEFF 		bl	SystemClock_Config
 672              	.LVL32:
 116:Core/Src/main.c ****     MX_USART2_UART_Init();
 673              		.loc 1 116 5 view .LVU186
 674 000a FFF7FEFF 		bl	MX_GPIO_Init
 675              	.LVL33:
 117:Core/Src/main.c ****     MX_SPI1_Init();
 676              		.loc 1 117 5 view .LVU187
 677 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 678              	.LVL34:
 118:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 679              		.loc 1 118 5 view .LVU188
 680 0012 FFF7FEFF 		bl	MX_SPI1_Init
 681              	.LVL35:
 124:Core/Src/main.c **** 
 682              		.loc 1 124 5 view .LVU189
 683 0016 FFF7FEFF 		bl	osKernelInitialize
 684              	.LVL36:
 144:Core/Src/main.c **** 
 685              		.loc 1 144 5 view .LVU190
 144:Core/Src/main.c **** 
 686              		.loc 1 144 25 is_stmt 0 view .LVU191
 687 001a 084A     		ldr	r2, .L48
 688 001c 0021     		movs	r1, #0
 689 001e 0848     		ldr	r0, .L48+4
 690 0020 FFF7FEFF 		bl	osThreadNew
 691              	.LVL37:
 144:Core/Src/main.c **** 
 692              		.loc 1 144 23 discriminator 1 view .LVU192
 693 0024 074B     		ldr	r3, .L48+8
 694 0026 1860     		str	r0, [r3]
 147:Core/Src/main.c **** 
 695              		.loc 1 147 5 is_stmt 1 view .LVU193
 147:Core/Src/main.c **** 
 696              		.loc 1 147 24 is_stmt 0 view .LVU194
 697 0028 074A     		ldr	r2, .L48+12
 698 002a 0021     		movs	r1, #0
 699 002c 0748     		ldr	r0, .L48+16
 700 002e FFF7FEFF 		bl	osThreadNew
 701              	.LVL38:
 147:Core/Src/main.c **** 
 702              		.loc 1 147 22 discriminator 1 view .LVU195
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 26


 703 0032 074B     		ldr	r3, .L48+20
 704 0034 1860     		str	r0, [r3]
 158:Core/Src/main.c **** 
 705              		.loc 1 158 5 is_stmt 1 view .LVU196
 706 0036 FFF7FEFF 		bl	osKernelStart
 707              	.LVL39:
 708              	.L46:
 163:Core/Src/main.c ****         /* USER CODE END WHILE */
 709              		.loc 1 163 5 view .LVU197
 167:Core/Src/main.c ****     /* USER CODE END 3 */
 710              		.loc 1 167 5 view .LVU198
 163:Core/Src/main.c ****         /* USER CODE END WHILE */
 711              		.loc 1 163 11 view .LVU199
 712 003a FEE7     		b	.L46
 713              	.L49:
 714              		.align	2
 715              	.L48:
 716 003c 00000000 		.word	blinkTask01_attributes
 717 0040 00000000 		.word	Task_Blink_01
 718 0044 00000000 		.word	blinkTask01Handle
 719 0048 00000000 		.word	spiComTask_attributes
 720 004c 00000000 		.word	SpiComTask
 721 0050 00000000 		.word	spiComTaskHandle
 722              		.cfi_endproc
 723              	.LFE136:
 725              		.global	message
 726              		.section	.data.message,"aw"
 727              		.align	2
 730              	message:
 731 0000 48616C6C 		.ascii	"Hallo\000"
 731      6F00
 732              		.global	spi_com_status
 733              		.section	.bss.spi_com_status,"aw",%nobits
 736              	spi_com_status:
 737 0000 00       		.space	1
 738              		.global	spi_com_task_handle
 739              		.section	.bss.spi_com_task_handle,"aw",%nobits
 740              		.align	2
 743              	spi_com_task_handle:
 744 0000 00000000 		.space	4
 745              		.global	spiComTask_attributes
 746              		.section	.rodata.str1.4,"aMS",%progbits,1
 747              		.align	2
 748              	.LC0:
 749 0000 73706943 		.ascii	"spiComTask\000"
 749      6F6D5461 
 749      736B00
 750              		.section	.rodata.spiComTask_attributes,"a"
 751              		.align	2
 754              	spiComTask_attributes:
 755 0000 00000000 		.word	.LC0
 756 0004 00000000 		.space	16
 756      00000000 
 756      00000000 
 756      00000000 
 757 0014 00020000 		.word	512
 758 0018 19000000 		.word	25
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 27


 759 001c 00000000 		.space	8
 759      00000000 
 760              		.global	spiComTaskHandle
 761              		.section	.bss.spiComTaskHandle,"aw",%nobits
 762              		.align	2
 765              	spiComTaskHandle:
 766 0000 00000000 		.space	4
 767              		.global	blinkTask01_attributes
 768              		.section	.rodata.str1.4
 769 000b 00       		.align	2
 770              	.LC1:
 771 000c 626C696E 		.ascii	"blinkTask01\000"
 771      6B546173 
 771      6B303100 
 772              		.section	.rodata.blinkTask01_attributes,"a"
 773              		.align	2
 776              	blinkTask01_attributes:
 777 0000 0C000000 		.word	.LC1
 778 0004 00000000 		.space	16
 778      00000000 
 778      00000000 
 778      00000000 
 779 0014 00020000 		.word	512
 780 0018 18000000 		.word	24
 781 001c 00000000 		.space	8
 781      00000000 
 782              		.global	blinkTask01Handle
 783              		.section	.bss.blinkTask01Handle,"aw",%nobits
 784              		.align	2
 787              	blinkTask01Handle:
 788 0000 00000000 		.space	4
 789              		.global	huart2
 790              		.section	.bss.huart2,"aw",%nobits
 791              		.align	2
 794              	huart2:
 795 0000 00000000 		.space	136
 795      00000000 
 795      00000000 
 795      00000000 
 795      00000000 
 796              		.global	hspi1
 797              		.section	.bss.hspi1,"aw",%nobits
 798              		.align	2
 801              	hspi1:
 802 0000 00000000 		.space	100
 802      00000000 
 802      00000000 
 802      00000000 
 802      00000000 
 803              		.text
 804              	.Letext0:
 805              		.file 3 "C:/Users/Jakob/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 806              		.file 4 "C:/Users/Jakob/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 807              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 808              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 809              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 810              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 28


 811              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 812              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 813              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 814              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 815              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 816              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 817              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 818              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 819              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
 820              		.file 18 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 821              		.file 19 "<built-in>"
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:127    .text.MX_GPIO_Init:0000006c $d
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:133    .text.Task_Blink_01:00000000 $t
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:139    .text.Task_Blink_01:00000000 Task_Blink_01
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:169    .text.Task_Blink_01:00000014 $d
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:174    .text.SpiComTask:00000000 $t
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:180    .text.SpiComTask:00000000 SpiComTask
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:248    .text.SpiComTask:00000058 $d
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:743    .bss.spi_com_task_handle:00000000 spi_com_task_handle
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:736    .bss.spi_com_status:00000000 spi_com_status
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:730    .data.message:00000000 message
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:801    .bss.hspi1:00000000 hspi1
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:257    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:263    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:296    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:301    .text.Error_Handler:00000000 $t
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:307    .text.Error_Handler:00000000 Error_Handler
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:339    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:344    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:404    .text.MX_USART2_UART_Init:00000030 $d
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:794    .bss.huart2:00000000 huart2
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:410    .text.MX_SPI1_Init:00000000 $t
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:415    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:490    .text.MX_SPI1_Init:00000040 $d
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:496    .text.SystemClock_Config:00000000 $t
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:502    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:645    .text.SystemClock_Config:00000098 $d
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:650    .text.main:00000000 $t
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:656    .text.main:00000000 main
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:716    .text.main:0000003c $d
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:776    .rodata.blinkTask01_attributes:00000000 blinkTask01_attributes
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:787    .bss.blinkTask01Handle:00000000 blinkTask01Handle
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:754    .rodata.spiComTask_attributes:00000000 spiComTask_attributes
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:765    .bss.spiComTaskHandle:00000000 spiComTaskHandle
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:727    .data.message:00000000 $d
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:737    .bss.spi_com_status:00000000 $d
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:740    .bss.spi_com_task_handle:00000000 $d
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:747    .rodata.str1.4:00000000 $d
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:751    .rodata.spiComTask_attributes:00000000 $d
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:762    .bss.spiComTaskHandle:00000000 $d
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:773    .rodata.blinkTask01_attributes:00000000 $d
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:784    .bss.blinkTask01Handle:00000000 $d
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:791    .bss.huart2:00000000 $d
C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s:798    .bss.hspi1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_GPIO_TogglePin
osDelay
xTaskGetCurrentTaskHandle
HAL_SPI_Transmit
HAL_IncTick
HAL_UART_Init
ARM GAS  C:\Users\Jakob\AppData\Local\Temp\ccDdT5he.s 			page 30


HAL_SPI_Init
memset
HAL_PWREx_ControlVoltageScaling
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_EnableMSIPLLMode
HAL_Init
osKernelInitialize
osThreadNew
osKernelStart
